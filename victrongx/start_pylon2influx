#!/bin/bash

#
# pylon2influx startscript for victron energy venus (in my case a Cerbos GX)
#
# Armin Diehl <ad@ardiehl.de> Dec 7, 2021
#
############################################################################

. ./functions.sh

PROG="./pylon2influx"
MYSELF="/bin/bash ./start_pylon2influx"

# the serial port device, we need to create a lock file for that port
# because the serial starter script in venus will periodically test
# for devices on available serial ports
SERDEV=$1

if [ "$1." == "--kill." ]; then
	killprog $PROG
	exit $?
fi

if [ "$1." == "--killall." ]; then
	killprog $MYSELF
	killprog $PROG
	exit $?
fi

shift

if [ -z "$SERDEV" ]; then
	echo "no serial device specified"
	log "no serial device specified"
	exit 1
fi

# the data for the target influx database
INFLUX_DATABASE=battery
INFLUX_SERVER=lnx.armin.d
INFLUX_PORT=8086
INFLUX_USER=
INFLUX_PASSWORD=
QUERY_INTERVAL_SECONDS=5
# cache specifies the number of influx posts that will be queued in case
# the influx server is not reachable
CACHE=

OPTS="--device=$SERDEV --server=$INFLUX_SERVER --port=$INFLUX_PORT --db=$INFLUX_DATABASE"
[ -z "$INFLUX_USER" ] || OPTS="$OPTS --user=$UNFLUX_USER"
[ -z "$INFLUX_PASSWORD" ] || OPTS="$OPTS --password=$UNFLUX_PASSWORD"
[ -z "$CACHE" ] || OPTS="$OPTS --cache=$CACHE"
[ -z "$QUERY_INTERVAL_SECONDS" ] || OPTS="$OPTS --query=$QUERY_INTERVAL_SECONDS"

tryLock() {
  while true; do
    lock_tty $SERDEV
    [ $? -eq 0 ] && return 0
    echo -n "."
    sleep 0.5
  done
}

unlockOnExit() {
	unlock_tty $SERDEV
	echo "$SERVEV unlocked"
}

log "Trying to lock $SERDEV"
tryLock
log "obtained a lock for $SERDEV, starting"

trap unlockOnExit EXIT

SLEEPTIME=30

while true; do
	log "Starting $PROG $OPTS"
	$PROG -y $OPTS $*
	log "$PROG terminated, sleeping $SLEEPTIME seconds and trying to restart"
	sleep $SLEEPTIME
done


